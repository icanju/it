# -*- coding: utf-8 -*-
"""인프기초_데이터.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1j8zdGlE2vBLNNnb63J8D5XDqb68TstJp
"""

#67p
import seaborn
df = seaborn.load_dataset('anagrams')
df

df.info()

#68p
import requests
from bs4 import BeautifulSoup
url = "https://www.python.org/"
html = requests.get(url)
parsed = BeautifulSoup(html.content, "html.parser")
print(parsed.prettify)

#70p.
import pandas as pd
df = pd.read_csv('train.csv')

df.info()

df.describe()

#71p
df.isnull()

df.isnull().sum()

df.notnull().sum()

df[df['Embarked'].isna()]

#73p.
import matplotlib.pyplot as plt
a = [4, 23, 37, 35, 96]
b = [4, 11, 16, 29, 79]
c = [9, 12, 14, 20, 27]
plt.boxplot([a, b, c], showfliers=True)
plt.show()

import matplotlib.pyplot as plt
a = [4, 23, 37, 35, 96]
b = [4, 11, 16, 29, 79]
c = [9, 12, 14, 20, 27]
plt.boxplot([a, b, c], showfliers=False)
plt.show()

#74p
import numpy as np
def outliers(data):
  q1 =  np.percentile(data,25)
  q3 =  np.percentile(data,75)
  iqr = q3 - q1
  lower_bound = q1 - 1.5 * iqr
  upper_bound = q3 + 1.5 * iqr
  outliers = [ x for x in data if x < lower_bound or x > upper_bound]
  return lower_bound, upper_bound, outliers

data = [3, 7, 8, 10, 12, 15, 18, 21, 25, 30, 50]
print(outliers(data))

data = [1, 9, 11, 14, 17, 18, 19, 25, 35, 80, 90]
print(outliers(data))

#76p
import seaborn
df = seaborn.load_dataset('anagrams')
df

#77p
col=df['attnr']
col

col=df['attnr']
col.head()

cols=df[['num1','num2']]
cols.head()

#78p
df.loc[2]

df.loc[2:4]

df.iloc[2]

df.iloc[2:4]

df.loc[[1,3,5]]

df.iloc[2,[3,4]]

#79p
df.loc[[0,2],['attnr']] = 'divided*'
df['attnr'].head()

import seaborn
df=seaborn.load_dataset('anagrams')
col_drop =  df.drop('subidr',axis=1)
col_drop.head()

import seaborn
df=seaborn.load_dataset('anagrams')
row_drop =  df.drop(3,axis=0)
row_drop.head()

#80p
import seaborn
df = seaborn.load_dataset('anagrams')
df.loc[[2,3],['num1']]=None
df.loc[[1,3],['num2']]=None
df.loc[3,['attnr']]=None
df.head()

row_drop = df.dropna(inplace=False)
row_drop.head()

df.head()

df.dropna(subset=['num1'], inplace=True)
df.head()

#81p(80p상단 코드 실행 후 실행)
mean_num1=df['num1'].mean()
df['num1'].fillna(mean_num1, inplace=True)
df.head()

mode_attnr=df['attnr'].mode()[0]
df['attnr'].fillna(mode_attnr, inplace=True)
df.head()

#(80p상단 코드 실행 후 실행)
df.loc[[0,2,3],['attnr']] = 'divided*'
df['attnr'].head()

df['attnr'] = df['attnr'].str.replace("*", "", regex=False)
df['attnr'].head()

#82p
import seaborn
df=seaborn.load_dataset('anagrams')
df['numnew']=(df['num1']+df['num3'])/2
df.head()

import seaborn
df=seaborn.load_dataset('anagrams')
from sklearn.model_selection import train_test_split
Xtr, Xte, ytr, yte = train_test_split(df[['num1','num2','num3']],df['attnr'],test_size = 0.2)

print(Xtr.shape,ytr.shape)
print(Xte.shape,yte.shape)

Xtr.head()